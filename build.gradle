plugins {
    id 'application'
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'jacoco'
}

group 'de.uni_passau.fim.se2'
version '1.0-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation('commons-cli:commons-cli:1.5.0')
    implementation('com.google.guava:guava:31.1-jre')
    implementation('org.ow2.asm:asm:9.3')
    implementation('org.ow2.asm:asm-analysis:9.3')
    implementation('org.ow2.asm:asm-tree:9.3')
    implementation('org.ow2.asm:asm-util:9.3')

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    testImplementation('com.google.truth:truth:1.1.3')
    testImplementation('org.mockito:mockito-core:4.6.1')
    testImplementation('org.mockito:mockito-junit-jupiter:4.6.1')
    testImplementation('org.hamcrest:hamcrest-library:2.2')
}

application {
    mainClass = "de.uni_passau.fim.se2.StaticLineCounter"
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    dependsOn(test)
    enabled = true
    reports {
        csv.enabled true
        html.enabled true
    }
}

jacoco {
    toolVersion = '0.8.8'
}

task runnableJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": "de.uni_passau.fim.se2.StaticLineCounter"
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    with jar
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}
